'use strict';

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Input = (function () {
  function Input() {
    _classCallCheck(this, Input);

    this.apiKey = '';
    this.requestUrl = 'http://api.themoviedb.org/3';
    this.baseUrl = '';
    this.posterSize = 3;
    this.minVotes = 100;
    this.minAverage = 6.0;
    this.data = {
      genres: {
        4: 'Action',
        21: 'Comedy'
      },
      years: {
        1950: '50s',
        1960: '60s',
        1970: '70s',
        1980: '80s',
        1990: '90s',
        2000: '00s',
        2010: '10s'
      },
      result: false
    };
    this.selected = {
      genre: false,
      year: false
    };
  }

  _createClass(Input, [{
    key: 'convertSelection',
    value: function convertSelection() {
      var parameters = '';

      if (this.selected.year) {
        var year = parseInt(this.selected.year);

        parameters = '&primary_release_date.gte=' + year + '-01-01&primary_release_date.lte=' + (year + 9) + '-12-31';
      }

      return parameters;
    }
  }, {
    key: 'randomize',
    value: function randomize(amount) {
      return Math.ceil(Math.random() * amount);
    }
  }, {
    key: 'createPath',
    value: function createPath() {
      input.data.result.poster = this.baseUrl + input.posterSize + input.data.result.poster_path;
    }
  }]);

  return Input;
})();

var input = new Input();
'use strict';

var app = new Vue({
  el: '#app',
  data: input.data,
  ready: function ready() {
    this.$http.get(input.requestUrl + '/configuration?api_key=' + input.apiKey, function (data) {
      input.baseUrl = data.images.base_url;
      input.posterSize = data.images.poster_sizes[input.posterSize];
    });
  },

  methods: {
    filterGenre: function filterGenre(genre) {
      input.selected.genre = genre;
    },
    filterYear: function filterYear(year) {
      input.selected.year = year;
    },
    recommend: function recommend() {
      var parameters = input.convertSelection();
      var request = input.requestUrl + '/discover/movie?api_key=' + input.apiKey + parameters + '&vote_count.gte=' + input.minVotes + '&vote_average.gte=' + input.minAverage;

      this.$http.get(request, function (data) {
        var page = input.randomize(data.total_pages);

        this.$http.get(request + '&page=' + page, function (data) {
          var result = input.randomize(data.results.length);

          input.data.result = data.results[result];
          input.createPath();
        });
      });
    }
  }
});